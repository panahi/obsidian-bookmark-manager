import typescript from '@rollup/plugin-typescript';
import { nodeResolve } from '@rollup/plugin-node-resolve';
import commonjs from '@rollup/plugin-commonjs';
import copy from 'rollup-plugin-copy';
import "dotenv/config";
console.log(process.env);

const isProd = (process.env.BUILD === 'production');
let devVaultPath = process.env.OBSIDIAN_VAULT_PATH
if (devVaultPath.charAt(devVaultPath.length - 1) !== '/') {
    devVaultPath += "/";
}
devVaultPath += ".obsidian/plugins/obsidian-bookmark-manager/"

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/
`;

const cfg = {
    input: 'src/main.ts',
    output: {
        dir: isProd ? 'build' : devVaultPath,
        sourcemap: 'inline',
        sourcemapExcludeSources: isProd,
        format: 'cjs',
        exports: 'default',
        banner,
    },
    external: ["obsidian"],
    plugins: [
        typescript(),
        nodeResolve({ browser: true }),
        commonjs(),
    ],
    onwarn: (warning, warn) => {
        warn(warning);
    }
};

if (!isProd) {
    cfg.plugins.push(copy({
        targets: [
            { src: 'manifest.json', dest: devVaultPath },
            { src: 'src/styles.css', dest: devVaultPath },
        ]
    }))
}

export default cfg;